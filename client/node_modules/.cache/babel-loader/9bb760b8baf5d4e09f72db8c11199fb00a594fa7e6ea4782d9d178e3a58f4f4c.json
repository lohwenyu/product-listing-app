{"ast":null,"code":"var _jsxFileName = \"/Users/lohwenyu/Desktop/product-listing-app/client/src/components/ProductPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Pagination from 'react-bootstrap/Pagination';\nimport ProductCard from \"./ProductCard\";\nimport \"./ProductPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProductPage = _ref => {\n  _s();\n  let {\n    loadedProducts\n  } = _ref;\n  const [currentPage, setCurrentPage] = useState(\"1\");\n  const recordsPerPage = 10;\n  const [lastRecord, setLastRecord] = useState(recordsPerPage);\n  const [firstRecord, setFirstRecord] = useState(0);\n  const [currentRecords, setCurrentRecords] = useState();\n  const [numPages, setNumPages] = useState(0);\n  const [pageNumbers, setPageNumbers] = useState();\n  const [totalProducts, setTotalProducts] = useState();\n  const handlePageChange = e => {\n    const page = e.target.text;\n    if (page !== currentPage) {\n      const tempLastRecord = Math.min(page * recordsPerPage, loadedProducts.length);\n      let tempFirstRecord;\n      if (page > currentPage) {\n        tempFirstRecord = Math.max(lastRecord, tempLastRecord - recordsPerPage);\n      } else {\n        tempFirstRecord = tempLastRecord - recordsPerPage;\n      }\n      setCurrentPage(page);\n      setLastRecord(tempLastRecord);\n      setFirstRecord(tempFirstRecord);\n    }\n    ;\n  };\n  const reset = () => {\n    setCurrentPage(\"1\");\n    setLastRecord(recordsPerPage);\n    setFirstRecord(0);\n  };\n  useEffect(() => {\n    if (loadedProducts) {\n      setCurrentRecords(loadedProducts.slice(firstRecord, lastRecord));\n      const tempTotalProducts = loadedProducts.length;\n      const tempNumPages = Math.ceil(tempTotalProducts / recordsPerPage);\n      setNumPages(tempNumPages);\n      setPageNumbers([...Array(tempNumPages + 1).keys()].slice(1));\n      setTotalProducts(tempTotalProducts);\n    }\n    if (loadedProducts && loadedProducts.length !== totalProducts) {\n      reset();\n    }\n  }, [firstRecord, lastRecord, recordsPerPage, numPages, loadedProducts]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [currentRecords && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"product-container\",\n        children: currentRecords.map((product, index) => {\n          return /*#__PURE__*/_jsxDEV(ProductCard, {\n            product: product\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 36\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n        size: \"sm\",\n        className: \"pagination\",\n        children: pageNumbers.map(pageNum => {\n          return /*#__PURE__*/_jsxDEV(Pagination.Item, {\n            active: pageNum.toString() === currentPage,\n            onClick: handlePageChange,\n            children: pageNum\n          }, pageNum, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 36\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true), (!currentRecords || totalProducts === 0) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"empty-message\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No products are listed at the moment.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n_s(ProductPage, \"k/mEYkhTmqoPqJR82bg45mr7Dbw=\");\n_c = ProductPage;\nexport default ProductPage;\nvar _c;\n$RefreshReg$(_c, \"ProductPage\");","map":{"version":3,"names":["React","useState","useEffect","Pagination","ProductCard","jsxDEV","_jsxDEV","Fragment","_Fragment","ProductPage","_ref","_s","loadedProducts","currentPage","setCurrentPage","recordsPerPage","lastRecord","setLastRecord","firstRecord","setFirstRecord","currentRecords","setCurrentRecords","numPages","setNumPages","pageNumbers","setPageNumbers","totalProducts","setTotalProducts","handlePageChange","e","page","target","text","tempLastRecord","Math","min","length","tempFirstRecord","max","reset","slice","tempTotalProducts","tempNumPages","ceil","Array","keys","children","className","map","product","index","fileName","_jsxFileName","lineNumber","columnNumber","size","pageNum","Item","active","toString","onClick","_c","$RefreshReg$"],"sources":["/Users/lohwenyu/Desktop/product-listing-app/client/src/components/ProductPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Pagination from 'react-bootstrap/Pagination';\nimport ProductCard from \"./ProductCard\";\n\nimport \"./ProductPage.css\";\n\nconst ProductPage = ({ loadedProducts }) => {\n    const [currentPage, setCurrentPage] = useState(\"1\");\n    const recordsPerPage = 10;\n\n    const [lastRecord, setLastRecord] = useState(recordsPerPage);\n    const [firstRecord, setFirstRecord] = useState(0);\n\n    const [currentRecords, setCurrentRecords] = useState();\n    const [numPages, setNumPages] = useState(0);\n    const [pageNumbers, setPageNumbers] = useState();\n\n    const [totalProducts, setTotalProducts] = useState();\n\n    const handlePageChange = (e) => {\n        const page = e.target.text;\n\n        if (page !== currentPage) {\n            const tempLastRecord = Math.min(page * recordsPerPage, loadedProducts.length);\n\n            let tempFirstRecord;\n            if (page > currentPage) {\n                tempFirstRecord = Math.max(lastRecord, tempLastRecord - recordsPerPage);\n            } else {\n                tempFirstRecord = tempLastRecord - recordsPerPage;\n            }\n\n            setCurrentPage(page);\n            setLastRecord(tempLastRecord);\n            setFirstRecord(tempFirstRecord);\n        };\n    };\n\n    const reset = () => {\n        setCurrentPage(\"1\");\n        setLastRecord(recordsPerPage);\n        setFirstRecord(0);\n    }\n\n    useEffect(() => {\n        if (loadedProducts) {\n            setCurrentRecords(loadedProducts.slice(firstRecord, lastRecord));\n            const tempTotalProducts = loadedProducts.length;\n            const tempNumPages = Math.ceil(tempTotalProducts / recordsPerPage);\n            setNumPages(tempNumPages);\n            setPageNumbers([...Array(tempNumPages + 1).keys()].slice(1));\n            setTotalProducts(tempTotalProducts);\n        }\n        if (loadedProducts && loadedProducts.length !== totalProducts) {\n            reset()\n        }\n    }, [firstRecord, lastRecord, recordsPerPage, numPages, loadedProducts]);\n\n    return (\n        <div>\n            {currentRecords &&\n                <>\n                    <div className=\"product-container\">\n                        {currentRecords.map((product, index) => {\n                            return <ProductCard key={index} product={product} />\n                        })}\n                    </div>\n\n                    <Pagination size=\"sm\" className=\"pagination\">\n                        {pageNumbers.map((pageNum) => {\n                            return <Pagination.Item key={pageNum} active={pageNum.toString() === currentPage} onClick={handlePageChange}>\n                                {pageNum}\n                            </Pagination.Item>\n                        })}\n                    </Pagination>\n                </>\n            }\n            {(!currentRecords || totalProducts === 0) &&\n                <div className=\"empty-message\">\n                    <p>No products are listed at the moment.</p>\n                </div>\n            }\n        </div>\n    );\n};\n\nexport default ProductPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}