{"ast":null,"code":"var _jsxFileName = \"/Users/lohwenyu/Desktop/hpe assignment/product-listing-app/src/components/ProductCards.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Card } from \"react-bootstrap\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport Pagination from 'react-bootstrap/Pagination';\nimport \"./ProductCards.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProductCards = _ref => {\n  _s();\n  let {\n    loadedProducts\n  } = _ref;\n  const navigate = useNavigate();\n  const location = useLocation();\n  const handleViewProduct = e => {\n    var _location$state;\n    const redirectPath = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.path) || `/viewProduct/${e.target.value}`;\n    navigate(redirectPath);\n  };\n\n  // User is currently on this page\n  const [currentPage, setCurrentPage] = useState(1);\n  // No of Records to be displayed on each page   \n  const recordsPerPage = 10;\n  const onPageChange = page => {\n    setCurrentPage(page);\n  };\n  const nextPage = () => {\n    if (currentPage !== nPages) setCurrentPage(currentPage + 1);\n  };\n  const prevPage = () => {\n    if (currentPage !== 1) setCurrentPage(currentPage - 1);\n  };\n  const indexOfLastRecord = currentPage * recordsPerPage;\n  const indexOfFirstRecord = indexOfLastRecord - recordsPerPage;\n  const [currentRecords, setCurrentRecords] = useState();\n  const [numPages, setNumPages] = useState(0);\n  const [pageNumbers, setPageNumbers] = useState();\n  useEffect(() => {\n    console.log(indexOfFirstRecord, indexOfLastRecord, recordsPerPage, numPages, pageNumbers, loadedProducts);\n    if (loadedProducts) {\n      setCurrentRecords(loadedProducts.slice(indexOfFirstRecord, indexOfLastRecord));\n      const tempNumPages = Math.ceil(loadedProducts.length / recordsPerPage);\n      setNumPages(tempNumPages);\n      setPageNumbers([...Array(tempNumPages + 1).keys()].slice(1));\n    }\n  }, [indexOfFirstRecord, indexOfLastRecord, recordsPerPage, numPages, loadedProducts]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [currentRecords && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"product-container\",\n        children: currentRecords.map((product, index) => {\n          return /*#__PURE__*/_jsxDEV(Card, {\n            className: \"product-card\",\n            children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n              variant: \"top\",\n              src: `http://localhost:8080/${product.image}`,\n              className: \"product-image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: product.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n                children: [\"$\", product.price]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              value: product.uid,\n              variant: \"primary\",\n              onClick: handleViewProduct,\n              children: \"View Product\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 36\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n        size: \"sm\",\n        class: true,\n        children: pageNumbers.map(pageNum => {\n          return /*#__PURE__*/_jsxDEV(Pagination.Item, {\n            active: pageNum === currentPage,\n            children: pageNum\n          }, pageNum, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 36\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true), !loadedProducts && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"empty-message\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No products are listed at the moment.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n_s(ProductCards, \"BoPmMf9SnlkVKIPDhndTUxZ+Tw8=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = ProductCards;\nexport default ProductCards;\nvar _c;\n$RefreshReg$(_c, \"ProductCards\");","map":{"version":3,"names":["React","useState","useEffect","Button","Card","useNavigate","useLocation","Pagination","jsxDEV","_jsxDEV","Fragment","_Fragment","ProductCards","_ref","_s","loadedProducts","navigate","location","handleViewProduct","e","_location$state","redirectPath","state","path","target","value","currentPage","setCurrentPage","recordsPerPage","onPageChange","page","nextPage","nPages","prevPage","indexOfLastRecord","indexOfFirstRecord","currentRecords","setCurrentRecords","numPages","setNumPages","pageNumbers","setPageNumbers","console","log","slice","tempNumPages","Math","ceil","length","Array","keys","children","className","map","product","index","Img","variant","src","image","fileName","_jsxFileName","lineNumber","columnNumber","Body","Title","name","Subtitle","price","uid","onClick","size","class","pageNum","Item","active","_c","$RefreshReg$"],"sources":["/Users/lohwenyu/Desktop/hpe assignment/product-listing-app/src/components/ProductCards.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Button, Card } from \"react-bootstrap\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport Pagination from 'react-bootstrap/Pagination';\n\nimport \"./ProductCards.css\";\n\nconst ProductCards = ({ loadedProducts }) => {\n    const navigate = useNavigate();\n    const location = useLocation();\n\n    const handleViewProduct = (e) => {\n        const redirectPath = location.state?.path || `/viewProduct/${e.target.value}`;\n        navigate(redirectPath);\n    };\n\n    // User is currently on this page\n    const [currentPage, setCurrentPage] = useState(1);\n    // No of Records to be displayed on each page   \n    const recordsPerPage = 10;\n\n    const onPageChange = (page) => {\n        setCurrentPage(page);\n    };\n\n    const nextPage = () => {\n        if(currentPage !== nPages) \n            setCurrentPage(currentPage + 1)\n    }\n    const prevPage = () => {\n        if(currentPage !== 1) \n            setCurrentPage(currentPage - 1)\n    }\n\n    const indexOfLastRecord = currentPage * recordsPerPage;\n    const indexOfFirstRecord = indexOfLastRecord - recordsPerPage;\n\n\n    const [currentRecords, setCurrentRecords] = useState();\n    const [numPages, setNumPages] = useState(0);\n    const [pageNumbers, setPageNumbers] = useState();\n\n    useEffect(() => {\n        console.log(indexOfFirstRecord, indexOfLastRecord, recordsPerPage, numPages, pageNumbers, loadedProducts)\n        if (loadedProducts) {\n            setCurrentRecords(loadedProducts.slice(indexOfFirstRecord, indexOfLastRecord));\n            const tempNumPages = Math.ceil(loadedProducts.length / recordsPerPage)\n            setNumPages(tempNumPages);\n            setPageNumbers([...Array(tempNumPages + 1).keys()].slice(1));\n        }\n\n    }, [indexOfFirstRecord, indexOfLastRecord, recordsPerPage, numPages, loadedProducts]);\n\n    return (\n        <div>\n            {currentRecords &&\n                <>\n                    <div className=\"product-container\">\n                        {currentRecords.map((product, index) => {\n                            return <Card key={index} className=\"product-card\">\n                                <Card.Img variant=\"top\" src={`http://localhost:8080/${product.image}`} className=\"product-image\" />\n                                <Card.Body>\n                                    <Card.Title>{product.name}</Card.Title>\n                                    <Card.Subtitle>${product.price}</Card.Subtitle>\n                                </Card.Body>\n                                <Button value={product.uid} variant=\"primary\" onClick={handleViewProduct}>View Product</Button>\n                            </Card>\n                        })}\n                    </div>\n\n                    <Pagination size=\"sm\" class>\n                        {pageNumbers.map((pageNum) => {\n                            return <Pagination.Item key={pageNum} active={pageNum === currentPage}>\n                                {pageNum}\n                            </Pagination.Item>\n                        })}\n\n                    </Pagination>\n                </>\n            }\n            {!loadedProducts &&\n                <div className=\"empty-message\">\n                    <p>No products are listed at the moment.</p>\n                </div>\n            }\n        </div>\n    );\n};\n\nexport default ProductCards;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}